
# This file is automatically generated by puppet-swagger-generator and
# any manual changes are likely to be clobbered when the files
# are regenerated.

require_relative '../../puppet_x/puppetlabs/swagger/fuzzy_compare'
require_relative '../../puppet_x/puppetlabs/swagger/differ'

Puppet::Type.newtype(:kubernetes_self_subject_rules_review) do
  
  @doc = "SelfSubjectRulesReview enumerates the set of actions the current user can perform within a namespace. The returned list of actions may be incomplete depending on the server's authorization mode, and any errors experienced during the evaluation. SelfSubjectRulesReview should be used by UIs to show/hide actions, or to quickly let an end user reason about their permissions. It should NOT Be used by external systems to drive authorization decisions as this raises confused deputy, cache lifetime/revocation, and correctness concerns. SubjectAccessReview, and LocalAccessReview are the correct way to defer authorization decisions to the API server."
  

  ensurable
  
  apply_to_all

    validate do
    required_properties = [
          :spec,
        ]
    required_properties.each do |property|
      # We check for both places so as to cover the puppet resource path as well
      if self[property].nil? and self.provider.send(property) == :absent
        fail "You must provide a #{property}"
      end
    end
  end
  
  newparam(:name, namevar: true) do
    desc 'Name of the self_subject_rules_review.'
  end

  newproperty(:metadata) do

    def insync?(is)
      PuppetX::Puppetlabs::Swagger::Utils::fuzzy_compare(is, should)
    end
    
    include PuppetX::Puppetlabs::Swagger::Differ
    def change_to_s(current_value, newvalue)
      property_diff_with_hashdiff(current_value, newvalue)
    end
    
  end

  newproperty(:spec) do
    desc "Spec holds information about the request being evaluated."

    def insync?(is)
      PuppetX::Puppetlabs::Swagger::Utils::fuzzy_compare(is, should)
    end
    
    include PuppetX::Puppetlabs::Swagger::Differ
    def change_to_s(current_value, newvalue)
      property_diff_with_hashdiff(current_value, newvalue)
    end
    
  end

  newproperty(:status) do
    desc "Status is filled in by the server and indicates the set of actions a user can perform."

    def insync?(is)
      PuppetX::Puppetlabs::Swagger::Utils::fuzzy_compare(is, should)
    end
    
    include PuppetX::Puppetlabs::Swagger::Differ
    def change_to_s(current_value, newvalue)
      property_diff_with_hashdiff(current_value, newvalue)
    end
    
  end

end
